---
- name: Install kubernetes
  hosts: controller,worker
  become: yes

  tasks:
    - name: Find the designated host
      set_fact:
        controller_hosts: "{{ groups['controller'] | first }}"   

    - name: Install deb packages
      apt:
        state: latest
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg 
          - lsb-release
          - software-properties-common
          - inetutils-traceroute
          - containerd
        update_cache: yes

    
    - name: Disable swap
      shell: swapoff -a
      

    - name: Ensure swap is disabled in /etc/fstab
      replace:
        path: /etc/fstab
        regexp: '^(.*swap)'
        replace: '## \1'
      

    - name: Load kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter
      
    - name: Create k8s.conf file for module loading
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter
        mode: '0644'
      
    - name: Create k8s.conf file for sysctl settings
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          #net.bridge.bridge-nf-call-iptables = 1
          #net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward=1
        mode: '0644'
      
    
    - name: Apply sysctl settings
      command: sysctl --system
      

    - name: Generate default containerd config
      shell: containerd config default | tee /etc/containerd/config.toml >/dev/null 2>&1
      

    - name: Enable SystemdCgroup in containerd config
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'
      

    - name: Restart containerd service
      systemd:
        name: containerd
        state: restarted
      
    
    - name: Check if Kubernetes GPG key exists
      stat:
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      register: k8s_key_file
      
    

    - name: Download Kubernetes GPG key
      shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      
      when: not k8s_key_file.stat.exists
      
    - name: Add Kubernetes repository
      shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' > /etc/apt/sources.list.d/kubernetes.list
      

    - name: Update apt cache
      apt:
        update_cache: yes
      

    - name: Install Kubernetes packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
      

    - name: Hold Kubernetes packages
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl
      

    - name: Enable kubelet service
      systemd:
        name: kubelet
        enabled: yes
        state: started
      

    - name: Enable containerd service
      systemd:
        name: containerd
        enabled: yes
        state: started
    
    

    - name: Initialize Kubernetes cluster on controller node
      shell: >
        kubeadm init 
        --pod-network-cidr 10.244.0.0/20 
        --control-plane-endpoint "{{ groups['controller'][0] }}:6443"
        --upload-certs 
        --v=5
        --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-etcd
      register: kubeadm_init_result
      when: inventory_hostname == groups['controller'][0]

    - name: Display kubeadm init output
      debug:
        var: kubeadm_init_result.stdout_lines
      when: inventory_hostname == groups['controller'][0]

      





