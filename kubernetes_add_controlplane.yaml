---
- name: Add Control Plane Node to Kubernetes Cluster
  hosts: controller
  vars:
    
    api_endpoint: "{{ hostvars[groups['controller'][0]]['ansible_host'] }}"
    api_port: 6443

    token: "{{ hostvars[groups['controller'][0]]['kubeadm_token'] | default('') }}"
    certificate_key: "{{ hostvars[groups['controller'][0]]['certificate_key'] | default('') }}"

  tasks:
    - name: Get join token from first control plane if not provided
      block:
        - name: Create token
          delegate_to: "{{ groups['controller'][0] }}"
          command: kubeadm token create --ttl 2h --print-join-command
          register: join_command_output
          changed_when: false
          when: token == ""
          become: true
          
        - name: Extract token
          set_fact:
            token: "{{ join_command_output.stdout | regex_search('--token ([0-9a-z]+\\.[0-9a-z]+)', '\\1') | first }}"
          when: token == "" and join_command_output.stdout is defined
          become: true

    - name: Generate new certificate key on first control plane
      block:
        - name: Upload certificates and get new key
          delegate_to: "{{ groups['controller'][0] }}"
          command: kubeadm init phase upload-certs --upload-certs
          register: cert_key_output
          changed_when: false
          when: inventory_hostname != groups['controller'][0]
          become: true
          
        - name: Set certificate key fact
          set_fact:
            certificate_key: "{{ cert_key_output.stdout_lines[-1] }}"
          when: inventory_hostname != groups['controller'][0] and cert_key_output.stdout is defined
          become: true

    - name: Join control plane node to cluster
      command: >
        kubeadm join {{ api_endpoint }}:{{ api_port }}
        --token {{ token }} 
        --discovery-token-unsafe-skip-ca-verification
        --control-plane 
        --certificate-key {{ certificate_key }}
      register: join_output
      failed_when: join_output.rc != 0 and "already exists" not in join_output.stderr
      changed_when: join_output.rc == 0
      when:
        - inventory_hostname != groups['controller'][0]
      become: true

    - name: Create .kube directory
      file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        mode: '0755'

    - name: Copy admin.conf to user's kube config
      become: true
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        remote_src: yes
        mode: '0600'